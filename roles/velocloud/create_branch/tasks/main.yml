---
# ************Tasks file for velocloud "configurationId" *******************

# **************************************************************************
#       Login with enterprise Profile
# **************************************************************************
- name: Login with enterprise Profile
  vars:
    body: "{{ lookup('template','../files/loginRequest.txt') }}"
  uri:
    url: "{{ veloURL }}/login/enterpriseLogin"
    method: POST
    body: "{{ body }}"
    force_basic_auth: yes
    status_code: 200
    body_format: raw
    validate_certs: false
    return_content: yes
    headers:
      Content-Type: "application/x-www-form-urlencoded"
  register: response
- set_fact:
    velo_edge_id: "{{ response.cookies }}"
- debug:
    msg: " reqest {{velo_edge_id}}"

# **************************************************************************
#        Get Configurations from enterprise Profile
# **************************************************************************
- name: Get Config id from enterprise Profile
  vars:
    body: "{{ lookup('template','../files/getEnterpriseConfRequest.json') | to_json }}"
  uri:
    url: "{{ veloURL }}/enterprise/getEnterpriseConfigurations"
    method: POST
    user: "{{ username }}"
    password: "{{ password }}"
    body: "{{ body }}"
    force_basic_auth: yes
    status_code: 200
    body_format: json
    validate_certs: no
    return_content: yes
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
      Cookie: "{{ response.cookies }}"
  register: response1
#- set_fact:
    # configurationId: "{{ response.json[2].id }}"
    #configurationId: "{{ item.id }}" 
  #with_items: "{{ response.json }}"
  #when: item.name == 'Acme VPN Profile'
- debug:
    msg: "Profile id for vpn profile-   {{  response1 }}  "